{"version":3,"sources":["components/AddContactForm.js","components/ContactListItem.js","components/ContactList.js","components/Filter.js","components/App.js","index.js"],"names":["ContactsForm","styled","form","InputLabel","label","FormInput","input","SubmitButton","button","AddContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","onSubmit","this","htmlFor","type","id","autoComplete","onChange","Component","ListItem","li","DeleteButton","ContactListItemWrapper","div","ContactListItem","handleDelete","contact","key","onClick","List","ul","ContactList","contacts","map","FilterInput","Filter","App","filter","uuid","alert","find","element","toLowerCase","prevState","contactId","newContacts","indexOf","storedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","getFilteredContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f385a196.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\n\r\nconst ContactsForm = styled.form`\r\nborder: 2px solid black;\r\nmax-width: 400px;\r\npadding: 10px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\nmax-width: 40%;\r\nfont-size: 20px;\r\n`;\r\n\r\nconst FormInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\nmax-width: 30%;\r\nborder-radius: 5px;\r\n`;\r\n\r\nexport default class AddContactForm extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {name, value} = e.target;\r\n\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n    this.setState({name: '', number: ''});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ContactsForm onSubmit={this.handleSubmit}>\r\n        <InputLabel htmlFor=\"name\">Name</InputLabel>\r\n        <FormInput type=\"text\" name=\"name\" id=\"name\" value={this.state.name} autoComplete='off'\r\n                   onChange={this.handleChange}/>\r\n\r\n        <InputLabel htmlFor=\"number\">Number</InputLabel>\r\n        <FormInput type=\"tel\" name=\"number\" id=\"number\" value={this.state.number} autoComplete='off'\r\n                   onChange={this.handleChange}/>\r\n\r\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\r\n      </ContactsForm>\r\n    )\r\n  }\r\n};\r\n\r\nAddContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\n\r\nconst ListItem = styled.li`\r\nmargin-right: 30px;\r\nmin-width: 50%;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\nmax-width: 50%;\r\nborder-radius: 5px;\r\n`;\r\n\r\nconst ContactListItemWrapper = styled.div`\r\ndisplay: flex;\r\nmargin-bottom: 10px;\r\n`;\r\n\r\n\r\nexport default function ContactListItem({handleDelete, contact: {id, name, number}}) {\r\n\r\n  return (\r\n    <ContactListItemWrapper>\r\n      <ListItem key={id}>{name}: {number} </ListItem>\r\n      <DeleteButton onClick={() => handleDelete(id)}>Delete</DeleteButton>\r\n    </ContactListItemWrapper>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  handleDelete: PropTypes.func.isRequired,\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }).isRequired\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport ContactListItem from \"./ContactListItem\";\r\n\r\nconst List = styled.ul`\r\nmax-width: 400px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nexport default function ContactList({contacts, handleDelete}) {\r\n\r\n  return (\r\n    <List>\r\n      {contacts.map(contact => {\r\n        return <ContactListItem key={contact.id} contact={contact} handleDelete={handleDelete}/>\r\n      })}\r\n    </List>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  handleDelete: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\n\r\nconst FilterInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\n`;\r\n\r\nexport default function Filter({handleChange}) {\r\n\r\n  return (\r\n    <FilterInput type=\"text\" onChange={handleChange} name=\"filter\" autoComplete='off'/>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired\r\n};","import React, {Component} from \"react\";\r\nimport {uuid} from 'uuidv4';\r\nimport AddContactForm from \"./AddContactForm\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: ''\r\n  };\r\n\r\n  getFilteredContacts() {\r\n    const {contacts, filter} = this.state;\r\n    if (filter === \"\")\r\n      return contacts;\r\n    else\r\n      return contacts.filter(contact => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const storedContacts = localStorage.getItem('contacts');\r\n\r\n    if(storedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(storedContacts)\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {name, value} = e.target;\r\n\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  onAddContact = (name, number) => {\r\n    const contact = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number\r\n    };\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      return alert(\"Please fill all fields!\");\r\n    }\r\n\r\n    if (this.state.contacts.find(element => (element.name.toLowerCase() === name.toLowerCase()))) {\r\n      return alert(\"This contact already added!\")\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact]\r\n      }\r\n    })\r\n  };\r\n\r\n  handleDelete = (contactId) => {\r\n    const {contacts} = this.state;\r\n    const newContacts = contacts.filter(contact => contact.id !== contactId);\r\n    this.setState({contacts: newContacts});\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts)\r\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>PhoneBook</h2>\r\n        <AddContactForm onAddContact={this.onAddContact}/>\r\n        <h3>Contacts</h3>\r\n        <Filter handleChange={this.handleChange}/>\r\n        <ContactList contacts={this.getFilteredContacts()} handleDelete={this.handleDelete}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}